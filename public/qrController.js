/****************************************************************************************************************
* 
* QR Code Generator Tool
* Author: David P. Lopez
* Company: YourMOM, Inc.
* Copyright 4343
* 
* Built this using open source frameworks while working at a place full of bozos.
* You'd be surprised, the people who oversee the orgs you work for are truly incompetent.
****************************************************************************************************************/

/****************************************************************************************************************
*
* Global Variables - Limited Use
*
*
*	
****************************************************************************************************************/
var clientPort = 4000;

/****************************************************************************************************************
* Self-Invoking Application Event Loop: QR Code Generator Event
* 
* 
* 
*
****************************************************************************************************************/

(()=>{

	// Default View
	$("div.view").append(
		"<br><h5>QR Code Generator Tool Suite</h5>"
	);

	// Do something when 1st tab is clicked
	$(".active").click(function(){
		// Refresh View & append new data as needed
		$("div.view").children().remove();
		$("div.view").append(
			"<br><h5>QR Code Generator Tool Suite</h5>" +
			"<p>Please Enter and Submit the data to be encoded to obtain a QR Code.</p>"
		);

		// Start a UI Event
		generateQRCodeUI(clientPort);
	});

	// Do something when Documentation is clicked
	$(".docs").click(function(){
		$("div.view").children().remove();
		// Start a UI Event
		displayDocumentationUI(clientPort);	
	});
})();

/****************************************************************************************************************

ViewController Methods



****************************************************************************************************************/


// Function to dynamically change the size of the textarea displaying the requestPayLoad
function dynamicTextArea(element, data){
	// Clear stale data
	

	// Append QR data to element
	$("#" + element).val(data);
	var text = $("#" + element).val();
	// regex to find \n
	var matches = text.match(/\n/g);
	var breaks = matches ? matches.length : 2;
	// add rows based on line-breaks in text
	$("#" + element).attr('rows', breaks + 2);
	document.getElementById(element).focus(); 
}


/****************************************************************************************************************

Asynchronous call made to Nodejs server for Data to Encode as a QR Code



****************************************************************************************************************/
function postDataToEncode(clientPort){
	
	$('#submitBtnTcn').click(function(){
		
		if(confirm("Are you sure this data is ready to generate a new QR Code?") == true){
			var resp = '';

			// Capture input field data needed to generate the QR Code
			var dataToEncode = { 
				'dataToEncode': $("#qrInput").val()
			};

			// async call to post form data to server to wait for response
			$.ajax({

				url: 'http://localhost:' + clientPort.toString() + '/qrCode',
				data: JSON.stringify(dataToEncode),
				dataType: 'text',
				type: 'POST',
				contentType: 'application/json',
				
				success: function(data, textStatus){
					console.log("DEBUG: Response from server: " + data);
					console.log("This data is sent from front.end: " + this.data + "," + this.url);

					resp = data;
					// Get Response from server and display in text area

					dynamicTextArea("qrResponse", resp);

				},
				error: function(request, status, error){
					var val = error.responseText;
					console.log("Error in Ajax: " + error);
					console.log("Error in Request: " + request.data);
					console.log("Error in Status: " + status);
				}
			});	

		};
	});
}






/****************************************************************************************************************

Display Documentation UI

This controls the display of the ReadMe file

****************************************************************************************************************/
function displayDocumentationUI(clientPort){
	// Refresh View & append new data as needed
	
	$("div.view").append(		
		"<br>" +
		'<zero-md file="qr/README.md">' +
			'<div class="md-html"></div>' +
		'</zero-md>'
	);
}





/****************************************************************************************************************

Generate QR Code UI

This controls the display of the QR Code generated by the node.js server

****************************************************************************************************************/
function generateQRCodeUI(clientPort){
	$("div.view").append(
		"<br>" +
		"<h5>Generate a VTS QR Code for Merchant Authorization</h5>" +
		"<p>" +
			"This tool is designed to generate a tokenized QR Code for Merchant acceptance " +
			"and Authorization. Enter the data to be encoded in the input field and press " +
			"the Submit button to generate the code that can be presented to a Merchant's " +
			"reader." +
		"</p>" +
		
		"<br>" +
		"<form  id=\"tcnform\" class=\"formInline\">" +
			"<fieldset>" +

				"<div class=\"form-group textfields\">" +
				    "<label for=\"qrInput\">Input QR Data to Encode</label>" +
				    "<textarea class=\"form-control mx-md-3\" type=\"text\" id=\"qrInput\"></textarea>" +
				"</div>" +
				"<br>" +

				// Submit Request
				"<div class=\"form-group\">" +
					"<button type=\"button\" id=\"submitBtnTcn\" class=\"btn btn-primary\">Generate QR Code</button>" +
				"</div>" +

			"</fieldset>" +
			"<br>" +

			"<fieldset>" +
				// Response with generated QR
				"<strong class=\"textfields\">QR Code Response</strong>" +

				"<div class=\"form-group textfields\">" +
				    "<label for=\"qrResponse\">QR Code Image</label>" +
				    "<textarea class=\"form-control mx-md-3\" id=\"qrResponse\"></textarea>" +
				"</div>" +
				"<br>" +

			"</fieldset>" +
		"</form>"
	);

	postDataToEncode(clientPort);
}
